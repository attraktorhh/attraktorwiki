<?php
# This file was automatically generated by the MediaWiki 1.43.5
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

require_once "/var/www/data/LocalSecrets.php";

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Attraktor Wiki";
$wgMetaNamespace = "Attraktor_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/images/9/95/Attraktor_logo_klein.png",
	'icon' => "$wgResourceBasePath/images/9/95/Attraktor_logo_klein.png",
];
$wgFavicon = "$wgResourceBasePath/images/favicon.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "it@attraktor.org";
$wgPasswordSender = "no-reply@attraktor.org";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;
$wgEmailConfirmToEdit = true;

# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";
$wgDefaultLanguageVariant = "de";
$wgDefaultUserOptions['language'] = "de";
$wgDefaultUserOptions['variant'] = "de";

# Time zone
$wgLocaltimezone = "Europe/Berlin";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
// $wgUpgradeKey = "some random string here";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions["*"]["createaccount"] = false;
$wgGroupPermissions["*"]["edit"] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";
// $wgDefaultSkin = 'attraktor';

# Enabled skins.
// require_once "$IP/skins/attraktor/Attraktor.php";
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Vector' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:


# End of automatically generated settings.
# Add more configuration options below.

# preinstalled extensions
wfLoadExtension( 'Cite' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Lockdown' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'WikiEditor' );

# extensions installed via Dockerfile
wfLoadExtension( 'CheckUser' );
wfLoadExtension( 'intersection' );
wfLoadExtension( 'Lockdown' );
wfLoadExtension( 'MsUpload' );
wfLoadExtension( 'NewUserNotif' );
wfLoadExtension( 'PageForms' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'Variables' );
wfLoadExtension( 'Widgets' );

# Semantic MediaWiki
wfLoadExtension( 'SemanticMediaWiki' );
wfLoadExtension( 'SemanticResultFormats' );
enableSemantics( $wgFQDN );

$wgShowExceptionDetails = true;

$wgGroupPermissions['emailconfirmed']['skipcaptcha'] = true;
$wgGroupPermissions['bot']['delete'] = true;
$wgGroupPermissions['bot']['bigdelete'] = true;
$wgGroupPermissions['bureaucrat']['editwidgets'] = true;
$wgGroupPermissions['sysop']['editwidgets'] = true;

$wgLocalInterwikis = [strtolower( $wgSitename )];

// # Old workaround to rewrite https://wiki.attraktor.org/index.php/Attraktor_Wiki to https://wiki.attraktor.org/Attraktor_Wiki
// if (!preg_match('/api\.php$/', $_SERVER['SCRIPT_NAME'])) {
// 	$wgArticlePath = "$wgScriptPath/$1";
// }

# Official solution https://www.mediawiki.org/wiki/Manual:Short_URL/Docker
$wgArticlePath = "/$1"; // gives e.g. example.org/wiki/Page_title

$actions = array( 'view', 'edit', 'watch', 'unwatch', 'delete','revert', 'rollback', 'protect', 'unprotect', 'markpatrolled', 'render', 'submit', 'history', 'purge', 'info' );

foreach ( $actions as $action ) {
    $wgActionPaths[$action] = "/$action/$1";
}
